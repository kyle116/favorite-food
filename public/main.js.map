<<<<<<< HEAD
{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/update/update.component.css","webpack:///./src/app/components/update/update.component.html","webpack:///./src/app/components/update/update.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { UpdateComponent } from './components/update/update.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'profile/:id', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'update', component: UpdateComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    UpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card {\\n  width: 18rem;\\n  margin-bottom: 1.5rem;\\n}\\n\\n.view-profile {\\n  margin-top: .75rem;\\n}\\n\"","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>Welcome to your dashboard. Here are the other users on the Favorite Food App</p>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let user of users\\\">\\n\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{ user.firstName + \\\" \\\" + user.lastName}}</h5>\\n          <ul class=\\\"list-group list-group-flush\\\">\\n            <li class=\\\"list-group-item\\\">Age: {{ user.age }}</li>\\n            <li class=\\\"list-group-item\\\">Favorite Food: {{ user.favoriteFood }}</li>\\n          </ul>\\n          <a [routerLink]=\\\"['/profile', user._id]\\\" class=\\\"btn btn-primary view-profile\\\">View Profile</a>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  users = [];\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.getUsers().subscribe(data => {\n      this.users = data.users;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<main role=\\\"main\\\" class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h1>Favorite Food App</h1>\\n    <div *ngIf=\\\"!authService.loggedIn()\\\">\\n      <p class=\\\"lead\\\">Welcome to the Favorite Food App. Sign up to get started!</p>\\n       <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" [routerLink]=\\\"['/signup']\\\">Signup!</a>\\n    </div>\\n    <div *ngIf=\\\"authService.loggedIn()\\\">\\n      <p class=\\\"lead\\\">Welcome to the Favorite Food App. Go to your dashboard to see others on the app!</p>\\n       <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n    </div>\\n  </div>\\n</main>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form class=\\\"form-signin\\\" (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"Username\\\">Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n  <label for=\\\"Password\\\">Password</label>\\n  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\" Enter Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input class=\\\"btn btn-lg btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this._flashMessagesService.show(\"You are now logged in\", {cssClass: \"alert-success\", timeout: 2000});\n        this.router.navigate([\"dashboard\"]);\n      } else {\n        this._flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 2000});\n        this.router.navigate([\"login\"]);\n      }\n    });\n\n  }\n\n}\n","module.exports = \"nav {\\n  margin-bottom: 1.5rem;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark  bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Favorite Food</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n\\n      <li *ngIf=\\\"!authService.loggedIn()\\\"[routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/signup']\\\">Signup</a>\\n      </li>\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n      </li>\\n      <li *ngIf=\\\"authService.loggedIn()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this._flashMessagesService.show(\"You have logged out\", {cssClass: \"alert-success\", timeout: 2000});\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n\n}\n","module.exports = \".delete-button {\\n  margin-top: .5rem;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{user.firstName + \\\" \\\" + user.lastName}}</h2>\\n  <a *ngIf=\\\"userId === currentUserId\\\" class=\\\"\\\" [routerLink]=\\\"['/update']\\\">Edit Profile</a>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n    <li class=\\\"list-group-item\\\">Favorite Food: {{user.favoriteFood}}</li>\\n    <li class=\\\"list-group-item\\\">Age: {{user.age}}</li>\\n  </ul>\\n  <button *ngIf=\\\"userId === currentUserId\\\" type=\\\"button\\\" class=\\\"btn btn-danger delete-button\\\" (click)=\\\"deleteUser(user._id)\\\" name=\\\"button\\\">Delete</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n  userId: String;\n  currentUserId: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.userId = params[\"id\"];\n    });\n\n    this.authService.getProfile(false).subscribe(profile => {\n      this.currentUserId = profile.user._id;\n    })\n\n    this.authService.getProfile(this.userId).subscribe(profile => {\n      this.user = profile.user;\n      this.userId = profile.user._id\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n\n  }\n\n  deleteUser(id) {\n    this.authService.logout();\n    this.authService.deleteUser(id).subscribe(data => {\n      if(data.success) {\n        this._flashMessagesService.show(\"Your account has been deleted\", {cssClass: \"alert-success\", timeout: 2000});\n        this.router.navigate([\"/\"]);\n      } else {\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\n      }\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Sign Up</h2>\\n<form (submit)=\\\"onSignupSubmit()\\\" novalidate>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstName\\\">First Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastName\\\">Last Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"age\\\">Age</label>\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"age\\\" name=\\\"age\\\" class=\\\"form-control\\\" id=\\\"age\\\" placeholder=\\\"Age\\\" min=\\\"0\\\" max=\\\"200\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"favoriteFood\\\">What is your Favorite Food?</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"favoriteFood\\\" name=\\\"favoriteFood\\\" class=\\\"form-control\\\" id=\\\"favoriteFood\\\" placeholder=\\\"Favorite Food\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputEmail1\\\">Email address</label>\\n    <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputPassword1\\\">Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword1\\\" placeholder=\\\"Password\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  firstName: String;\n  lastName: String;\n  age: String;\n  favoriteFood: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSignupSubmit() {\n    const user = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      age: this.age,\n      favoriteFood: this.favoriteFood,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n    // Required Fields\n    if(!this.validateService.validateSignup(user)) {\n      this._flashMessagesService.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 2000});\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)) {\n      this._flashMessagesService.show(\"Please use valid email\", {cssClass: \"alert-danger\", timeout: 2000});\n      return false;\n    }\n\n    // Create user\n    this.authService.signupUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.authenticateUser(user).subscribe(loggedInData => {\n          if(loggedInData.success) {\n            this.authService.storeUserData(loggedInData.token, loggedInData.user);\n            this._flashMessagesService.show(\"Signup Success! You are now logged in\", {cssClass: \"alert-success\", timeout: 2000});\n            this.router.navigate([\"dashboard\"]);\n          } else {\n            this._flashMessagesService.show(loggedInData.msg, {cssClass: \"alert-danger\", timeout: 2000});\n            this.router.navigate([\"login\"]);\n          }\n        })\n      } else {\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\n        this.router.navigate([\"/signup\"]);\n      }\n    });\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n<h2 class=\\\"page-header\\\">Edit your Profile</h2>\\n<form (ngSubmit)=\\\"onUpdateSubmit()\\\" novalidate>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstName\\\">First Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastName\\\">Last Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"age\\\">Age</label>\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"user.age\\\" name=\\\"age\\\" class=\\\"form-control\\\" id=\\\"age\\\" placeholder=\\\"Age\\\" min=\\\"0\\\" max=\\\"200\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"favoriteFood\\\">What is your Favorite Food?</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.favoriteFood\\\" name=\\\"favoriteFood\\\" class=\\\"form-control\\\" id=\\\"favoriteFood\\\" placeholder=\\\"Favorite Food\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputEmail1\\\">Email address</label>\\n    <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputPassword1\\\">Password (leave blank if you do not want to change your password)</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword1\\\" placeholder=\\\"Password\\\">\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ValidateService } from '../../services/validate.service';\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  user = {\n    firstName: \"\",\n    lastName: \"\",\n    age: \"\",\n    favoriteFood: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  constructor(\n    private authService: AuthService,\n    private validateService: ValidateService,\n    private router: Router,\n    private _flashMessagesService: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile(false).subscribe(profile => {\n      profile.user.password = \"\";\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onUpdateSubmit() {\n    // Required Fields\n    if(!this.validateService.validateSignup(this.user)) {\n      this._flashMessagesService.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 2000});\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(this.user.email)) {\n      this._flashMessagesService.show(\"Please use valid email\", {cssClass: \"alert-danger\", timeout: 2000});\n      return false;\n    }\n\n    // Update user\n    this.authService.updateUser(this.user).subscribe(data => {\n      if(data.success) {\n        this._flashMessagesService.show(\"Update Success!\", {cssClass: \"alert-success\", timeout: 2000});\n        this.router.navigate([\"/profile\"]);\n      } else {\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\n        this.router.navigate([\"/update\"]);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http) { }\n\n  signupUser(user) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(\"users/signup\", user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.post(\"users/authenticate\", user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile(id) {\n    var url = id ? \"users/profile/\" + id : \"users/profile/\";\n    let headers = new Headers();\n    this.loadToken();\n    headers.append(\"Authorization\", this.authToken);\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.get(url, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem(\"id_token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return tokenNotExpired(\"id_token\");\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  deleteUser(id) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.delete(\"users/profile/\" + id, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  updateUser(user) {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append(\"Authorization\", this.authToken);\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.put(\"users/update/\" + user._id, user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getUsers() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append(\"Authorization\", this.authToken);\n    headers.append(\"Content-Type\", \"application/json\");\n    return this.http.get(\"users/dashboard\", {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateSignup(user) {\n    if(user.firstName === undefined || user.lastName === undefined || user.age === undefined || user.favoriteFood === undefined || user.username === undefined || user.email === undefined || user.password === undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/update/update.component.css","webpack:///./src/app/components/update/update.component.html","webpack:///./src/app/components/update/update.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <flash-messages></flash-messages>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { UpdateComponent } from './components/update/update.component';\r\n\r\nimport { ValidateService } from './services/validate.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n  {path: 'profile/:id', component: ProfileComponent, canActivate: [AuthGuard]},\r\n  {path: 'update', component: UpdateComponent, canActivate: [AuthGuard]},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    UpdateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    FlashMessagesModule.forRoot()\r\n  ],\r\n  providers: [ValidateService, AuthService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".card {\\r\\n  margin-bottom: 1.5rem;\\r\\n}\\r\\n\\r\\n.view-profile {\\r\\n  margin-top: .75rem;\\r\\n}\\r\\n\"","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\r\\n<p>Welcome to your dashboard. Here are the other users on the Favorite Food App</p>\\r\\n<div class=\\\"row\\\">\\r\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-md-4\\\">\\r\\n\\r\\n    <div >\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{ user.firstName + \\\" \\\" + user.lastName}}</h5>\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li class=\\\"list-group-item\\\">Age: {{ user.age }}</li>\\r\\n            <li class=\\\"list-group-item\\\">Favorite Food: {{ user.favoriteFood }}</li>\\r\\n          </ul>\\r\\n          <a [routerLink]=\\\"['/profile', user._id]\\\" class=\\\"btn btn-primary view-profile\\\">View Profile</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  users = [];\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getUsers().subscribe(data => {\r\n      this.users = data.users;\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<main role=\\\"main\\\" class=\\\"container\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <h1>Favorite Food App</h1>\\r\\n    <div *ngIf=\\\"!authService.loggedIn()\\\">\\r\\n      <p class=\\\"lead\\\">Welcome to the Favorite Food App. Sign up to get started!</p>\\r\\n       <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" [routerLink]=\\\"['/signup']\\\">Signup!</a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"authService.loggedIn()\\\">\\r\\n      <p class=\\\"lead\\\">Welcome to the Favorite Food App. Go to your dashboard to see others on the app!</p>\\r\\n       <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</main>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\r\\n<form class=\\\"form-signin\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"Username\\\">Username</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n  <label for=\\\"Password\\\">Password</label>\\r\\n  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\" Enter Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n  </div>\\r\\n  <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\">\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private _flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.authService.storeUserData(data.token, data.user);\r\n        this._flashMessagesService.show(\"You are now logged in\", {cssClass: \"alert-success\", timeout: 2000});\r\n        this.router.navigate([\"dashboard\"]);\r\n      } else {\r\n        this._flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 2000});\r\n        this.router.navigate([\"login\"]);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"nav {\\r\\n  margin-bottom: 1.5rem;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark  bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Favorite Food</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\r\\n      </li>\\r\\n\\r\\n      <li *ngIf=\\\"!authService.loggedIn()\\\"[routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/signup']\\\">Signup</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"authService.loggedIn()\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private _flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogoutClick() {\r\n    this.authService.logout();\r\n    this._flashMessagesService.show(\"You have logged out\", {cssClass: \"alert-success\", timeout: 2000});\r\n    this.router.navigate([\"/login\"]);\r\n    return false;\r\n  }\r\n\r\n}\r\n","module.exports = \".delete-button {\\r\\n  margin-top: .5rem;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"user\\\">\\r\\n  <h2 class=\\\"page-header\\\">{{user.firstName + \\\" \\\" + user.lastName}}</h2>\\r\\n  <a *ngIf=\\\"userId === currentUserId\\\" class=\\\"\\\" [routerLink]=\\\"['/update']\\\">Edit Profile</a>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Favorite Food: {{user.favoriteFood}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Age: {{user.age}}</li>\\r\\n  </ul>\\r\\n  <button *ngIf=\\\"userId === currentUserId\\\" type=\\\"button\\\" class=\\\"btn btn-danger delete-button\\\" (click)=\\\"deleteUser(user._id)\\\" name=\\\"button\\\">Delete</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user: Object;\r\n  userId: String;\r\n  currentUserId: String;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private _flashMessagesService: FlashMessagesService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.userId = params[\"id\"];\r\n    });\r\n\r\n    this.authService.getProfile(false).subscribe(profile => {\r\n      this.currentUserId = profile.user._id;\r\n    })\r\n\r\n    this.authService.getProfile(this.userId).subscribe(profile => {\r\n      this.user = profile.user;\r\n      this.userId = profile.user._id\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n\r\n  }\r\n\r\n  deleteUser(id) {\r\n    this.authService.logout();\r\n    this.authService.deleteUser(id).subscribe(data => {\r\n      if(data.success) {\r\n        this._flashMessagesService.show(\"Your account has been deleted\", {cssClass: \"alert-success\", timeout: 2000});\r\n        this.router.navigate([\"/\"]);\r\n      } else {\r\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Sign Up</h2>\\r\\n<form (submit)=\\\"onSignupSubmit()\\\" novalidate>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"firstName\\\">First Name</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"lastName\\\">Last Name</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"age\\\">Age</label>\\r\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"age\\\" name=\\\"age\\\" class=\\\"form-control\\\" id=\\\"age\\\" placeholder=\\\"Age\\\" min=\\\"0\\\" max=\\\"200\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"favoriteFood\\\">What is your Favorite Food?</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"favoriteFood\\\" name=\\\"favoriteFood\\\" class=\\\"form-control\\\" id=\\\"favoriteFood\\\" placeholder=\\\"Favorite Food\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleInputEmail1\\\">Email address</label>\\r\\n    <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\r\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\r\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  firstName: String;\r\n  lastName: String;\r\n  age: String;\r\n  favoriteFood: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private _flashMessagesService: FlashMessagesService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSignupSubmit() {\r\n    const user = {\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      age: this.age,\r\n      favoriteFood: this.favoriteFood,\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    // Required Fields\r\n    if(!this.validateService.validateSignup(user)) {\r\n      this._flashMessagesService.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if(!this.validateService.validateEmail(user.email)) {\r\n      this._flashMessagesService.show(\"Please use valid email\", {cssClass: \"alert-danger\", timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Create user\r\n    this.authService.signupUser(user).subscribe(data => {\r\n      if(data.success) {\r\n        this.authService.authenticateUser(user).subscribe(loggedInData => {\r\n          if(loggedInData.success) {\r\n            this.authService.storeUserData(loggedInData.token, loggedInData.user);\r\n            this._flashMessagesService.show(\"Signup Success! You are now logged in\", {cssClass: \"alert-success\", timeout: 2000});\r\n            this.router.navigate([\"dashboard\"]);\r\n          } else {\r\n            this._flashMessagesService.show(loggedInData.msg, {cssClass: \"alert-danger\", timeout: 2000});\r\n            this.router.navigate([\"login\"]);\r\n          }\r\n        })\r\n      } else {\r\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\r\n        this.router.navigate([\"/signup\"]);\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n<h2 class=\\\"page-header\\\">Edit your Profile</h2>\\r\\n<form (ngSubmit)=\\\"onUpdateSubmit()\\\" novalidate>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"firstName\\\">First Name</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"lastName\\\">Last Name</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"age\\\">Age</label>\\r\\n    <input type=\\\"number\\\" [(ngModel)]=\\\"user.age\\\" name=\\\"age\\\" class=\\\"form-control\\\" id=\\\"age\\\" placeholder=\\\"Age\\\" min=\\\"0\\\" max=\\\"200\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"favoriteFood\\\">What is your Favorite Food?</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.favoriteFood\\\" name=\\\"favoriteFood\\\" class=\\\"form-control\\\" id=\\\"favoriteFood\\\" placeholder=\\\"Favorite Food\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleInputEmail1\\\">Email address</label>\\r\\n    <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\r\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"exampleInputPassword1\\\">Password</label>\\r\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ValidateService } from '../../services/validate.service';\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.css']\r\n})\r\nexport class UpdateComponent implements OnInit {\r\n  user = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    age: \"\",\r\n    favoriteFood: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private validateService: ValidateService,\r\n    private router: Router,\r\n    private _flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getProfile(false).subscribe(profile => {\r\n      profile.user.password = \"\";\r\n      this.user = profile.user;\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  onUpdateSubmit() {\r\n    // Required Fields\r\n    if(!this.validateService.validateSignup(this.user)) {\r\n      this._flashMessagesService.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Validate Email\r\n    if(!this.validateService.validateEmail(this.user.email)) {\r\n      this._flashMessagesService.show(\"Please use valid email\", {cssClass: \"alert-danger\", timeout: 2000});\r\n      return false;\r\n    }\r\n\r\n    // Update user\r\n    this.authService.updateUser(this.user).subscribe(data => {\r\n      if(data.success) {\r\n        this._flashMessagesService.show(\"Update Success!\", {cssClass: \"alert-success\", timeout: 2000});\r\n        this.router.navigate([\"/profile\"]);\r\n      } else {\r\n        this._flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 2000});\r\n        this.router.navigate([\"/update\"]);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([\"/login\"]);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  signupUser(user) {\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.post(\"users/signup\", user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.post(\"users/authenticate\", user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getProfile(id) {\r\n    var url = id ? \"users/profile/\" + id : \"users/profile/\";\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append(\"Authorization\", this.authToken);\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.get(url, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem(\"id_token\", token);\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem(\"id_token\");\r\n    this.authToken = token;\r\n  }\r\n\r\n  loggedIn() {\r\n    return tokenNotExpired(\"id_token\");\r\n  }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  deleteUser(id) {\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.delete(\"users/profile/\" + id, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  updateUser(user) {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append(\"Authorization\", this.authToken);\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.put(\"users/update/\" + user._id, user, {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n  getUsers() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append(\"Authorization\", this.authToken);\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    return this.http.get(\"users/dashboard\", {headers: headers})\r\n      .pipe(map(res => res.json()));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateSignup(user) {\r\n    if(user.firstName === undefined || user.lastName === undefined || user.age === undefined || user.favoriteFood === undefined || user.username === undefined || user.email === undefined || user.password === undefined){\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}
>>>>>>> d7f293ca7905b2e33e38f404eb53225f1bce7e22
